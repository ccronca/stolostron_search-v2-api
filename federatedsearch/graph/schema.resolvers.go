package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"

	graph "github.com/stolostron/search-v2-api/federatedsearch/graph/generated"
	"github.com/stolostron/search-v2-api/federatedsearch/graph/model"
	"github.com/stolostron/search-v2-api/pkg/resolver"
	klog "k8s.io/klog/v2"
)

// Search is the resolver for the search field.
func (r *queryResolver) Search(ctx context.Context, input []*model.SearchInput) ([]*resolver.SearchResult, error) {
	klog.Info(fmt.Errorf("not implemented: Search - search"))
	klog.V(3).Infof("--------- Received Search query with %d inputs ---------\n", len(input))
	// props := map[string]interface{}{
	// 	"allProperties": []string{"cluster", "kind", "label", "name", "namespace", "status"},
	// }
	// res := resolver.SearchResult{}

	return nil, nil //resolver.Search(ctx, input)
}

// SearchComplete is the resolver for the searchComplete field.
func (r *queryResolver) SearchComplete(ctx context.Context, property string, query *model.SearchInput, limit *int) ([]*string, error) {
	klog.Info(fmt.Errorf("not implemented: SearchComplete - searchComplete"))
	return nil, nil
}

// SearchSchema is the resolver for the searchSchema field.
func (r *queryResolver) SearchSchema(ctx context.Context) (map[string]interface{}, error) {
	klog.V(3).Infoln("Received SearchSchema query")
	return resolver.SearchSchemaResolver(ctx)
}

// Messages is the resolver for the messages field.
func (r *queryResolver) Messages(ctx context.Context) ([]*model.Message, error) {
	klog.Info(fmt.Errorf("not implemented: Messages - messages"))
	return nil, nil
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
type mutationResolver struct{ *Resolver }
